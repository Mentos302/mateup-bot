import { Markup } from 'telegraf';
import { On, Update, Ctx } from 'nestjs-telegraf';
import { Context } from 'src/interfaces/context.interface';
import { SanityService } from 'src/sanity/sanity.service';
import { TelegrafExceptionFilter } from 'src/common/filters/telegraf-exception.filter';
import { UseFilters } from '@nestjs/common';

@Update()
@UseFilters(TelegrafExceptionFilter)
export class UserUpdate {
  constructor(private readonly sanityService: SanityService) {}

  @On(['message', 'callback_query'])
  async onMessage(@Ctx() ctx: Context): Promise<unknown> {
    if (ctx.updateType === 'callback_query') ctx.answerCbQuery();

    const user = await this.sanityService.getUserByChatId(ctx.from.id);

    if (user && user.is_teacher)
      return ctx.scene.enter('lesson_date', { user });

    if (!user)
      await this.sanityService.createUser(
        ctx.from.id,
        `${ctx.from.first_name} ${ctx.from.last_name}`,
      );

    ctx.replyWithHTML(
      `üëã <b>–í—ñ—Ç–∞—é!</b>\n\n–û—á—ñ–∫—É–π—Ç–µ, –Ω–µ–∑–∞–±–∞—Ä–æ–º –í–∞—Å –≤–µ—Ä–∏—Ñ—ñ–∫—É—é—Ç—å —Ç–∞ –Ω–∞–¥–∞–¥—É—Ç—å –¥–æ—Å—Ç—É–ø.`,
      Markup.inlineKeyboard([
        { text: '–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑', callback_data: 'rnmsht' },
      ]),
    );
  }
}
